version: "3.9"
services:
  redis:
    image: redis
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass redispass
    container_name: Baserow-REDIS
    hostname: baserow-redis
    mem_limit: 256m
    mem_reservation: 50m
    cpu_shares: 768
    security_opt:
      - no-new-privileges:true
    read_only: true
    user: 1026:100
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
    volumes:
      - ./redis:/data:rw
    environment:
      TZ: Europe/Bucharest
    restart: on-failure:5

  db:
    image: postgres
    container_name: Baserow-DB
    hostname: baserow-db
    mem_limit: 512m
    cpu_shares: 768
    security_opt:
      - no-new-privileges:true
    user: 1026:100
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "baserow", "-U", "baserowuser"]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - ./db:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_DB: baserow
      POSTGRES_USER: baserowuser
      POSTGRES_PASSWORD: baserowpass
    restart: on-failure:5

  baserow:
    image: baserow/baserow:1.15.1
    container_name: Baserow
    hostname: baserow
    mem_limit: 3g
    cpu_shares: 768
    security_opt:
      - no-new-privileges:true
    read_only: true
    ports:
      - 3888:80
    volumes:
      - ./data:/baserow/data:rw
    environment:
      BASEROW_PUBLIC_URL: https://baserow.yourname.synology.me
      BASEROW_MAX_IMPORT_FILE_SIZE_MB: 1024 
      DATABASE_USER: baserowuser
      DATABASE_PASSWORD: baserowpass
      DATABASE_NAME: baserow
      DATABASE_HOST: baserow-db
      DATABASE_PORT: 5432
      REDIS_HOST: baserow-redis
      REDIS_PORT: 6379
      REDIS_PROTOCOL: redis
      REDIS_USER: default
      REDIS_PASSWORD: redispass
      EMAIL_SMTP: Your-own-gmail-address
      EMAIL_SMTP_HOST: smtp.gmail.com
      EMAIL_SMTP_PORT: 587
      EMAIL_SMTP_USER: Your-own-gmail-address
      EMAIL_SMTP_PASSWORD: Your-own-app-password
      EMAIL_SMTP_USE_TLS: true
      FROM_EMAIL: Your-own-gmail-address
    restart: on-failure:5
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
